<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AllowedSchemeConstraint_CheckSchemes_InvalidScheme" xml:space="preserve">
    <value>At least one of the specified scheme strings is null or empty or contains only white-space.</value>
  </data>
  <data name="AllowedSchemeConstraint_CheckSchemes_NoScheme" xml:space="preserve">
    <value>The list of allowed schemes is empty.</value>
  </data>
  <data name="AllowedSchemeConstraint_Validate_Failed" xml:space="preserve">
    <value>URI scheme '{0}' is not supported. Allowed schemes: {1}.</value>
  </data>
  <data name="AllowedSchemeConstraint_Validate_NotConfigured" xml:space="preserve">
    <value>No allowed schemes set.</value>
  </data>
  <data name="CharacterSetConstraint_CharSet_Ascii" xml:space="preserve">
    <value>ASCII</value>
  </data>
  <data name="CharacterSetConstraint_CharSet_Iso646Odette" xml:space="preserve">
    <value>ISO-646-IRV Odette Subset</value>
  </data>
  <data name="CharacterSetConstraint_CharSet_Iso8859" xml:space="preserve">
    <value>ISO 8859-1</value>
  </data>
  <data name="CharacterSetConstraint_CharSet_Windows1252" xml:space="preserve">
    <value>Windows-1252</value>
  </data>
  <data name="CharacterSetConstraint_SetParameters_InvalidValue" xml:space="preserve">
    <value>Parameter value '{0}' is not a valid supported character set.</value>
  </data>
  <data name="CharacterSetConstraint_Validate_Failed" xml:space="preserve">
    <value>Value contains at least one character not defined in the {0} character set.</value>
  </data>
  <data name="ConstraintConfigurationException_Message" xml:space="preserve">
    <value>Cannot configure constraint.</value>
  </data>
  <data name="Constraint_AssertDataType_Failed" xml:space="preserve">
    <value>Data type '{0}' is not supported by constraint '{1}'.</value>
  </data>
  <data name="EnumConstraint_Validate_InvalidFlag" xml:space="preserve">
    <value>Enumeration value has one or more flags that are not defined or not valid for this parameter.</value>
  </data>
  <data name="EnumConstraint_Validate_NotDefined" xml:space="preserve">
    <value>Value '{0}' is not defined in enumeration, or not valid for this parameter.</value>
  </data>
  <data name="EnumConstraint_Validate_NotSupported" xml:space="preserve">
    <value>Value type '{0}' is not supported by enumeration.</value>
  </data>
  <data name="EnumTypeConstraint_Validate_WrongEnum" xml:space="preserve">
    <value>Enumeration type of value ('{0}') does not match expected parameter enumeration type ('{1}').</value>
  </data>
  <data name="EnumValuesConstraint_InvalidValueType" xml:space="preserve">
    <value>Type '{0}' does not match underlying data type {1} of the enumeration and cannot be converted into this type.</value>
  </data>
  <data name="EnumValuesConstraint_NotInteger" xml:space="preserve">
    <value>Data type is not one of the integer types.</value>
  </data>
  <data name="EnumValuesConstraint_SetParameters_InvalidHex" xml:space="preserve">
    <value>Value '{0}' is not a valid hexadecimal value.</value>
  </data>
  <data name="EnumValuesConstraint_SetParameters_InvalidValue" xml:space="preserve">
    <value>Parameter '{0}' is not a valid key/value pair of format 'Name=Value'.</value>
  </data>
  <data name="EnumValuesConstraint_SetParameters_NotDataType" xml:space="preserve">
    <value>First parameter ist not a valid value of the ParameterDataType enumeration.</value>
  </data>
  <data name="EnumValuesConstraint_SetParameters_NoValues" xml:space="preserve">
    <value>No enumeration values specified for the {0} constraint.</value>
  </data>
  <data name="EnumValuesConstraint_Validate_NotConfigured" xml:space="preserve">
    <value>Constraint is not sufficiently configured.</value>
  </data>
  <data name="FileNameConstraint_Validate_Failed" xml:space="preserve">
    <value>Value contains at least one character not allowed in a file name. Actual value: '{0}'</value>
  </data>
  <data name="Global_CheckDataType_NotSupported" xml:space="preserve">
    <value>Data type is not supported by the {0} constraint.</value>
  </data>
  <data name="Global_CheckValueType_AltNotConvertible" xml:space="preserve">
    <value>Parameter data type '{0}' cannot be converted into alternative comparison data type '{1}'.</value>
  </data>
  <data name="Global_CheckValueType_NotConvertible" xml:space="preserve">
    <value>Parameter data type '{0}' cannot be converted into expected data type '{1}'.</value>
  </data>
  <data name="Global_ParameterDataType_None" xml:space="preserve">
    <value>Data type may not be 'None'.</value>
  </data>
  <data name="Global_SetParameters_Invalid" xml:space="preserve">
    <value>Parameter for constraint {0} is invalid.</value>
  </data>
  <data name="Global_SetParameters_InvalidCount" xml:space="preserve">
    <value>Invalid number of constraint parameters. Constraint {0} requires {1} parameter(s).</value>
  </data>
  <data name="Global_SetParameters_InvalidCountVariable" xml:space="preserve">
    <value>Invalid number of constraint parameters. Constraint {0} requires {1} to {2} parameter(s).</value>
  </data>
  <data name="Global_SetParameters_InvalidMinCount" xml:space="preserve">
    <value>Invalid number of constraint parameters. Constraint {0} requires at least {1} parameter(s).</value>
  </data>
  <data name="Global_Validate_StringEmpty" xml:space="preserve">
    <value>Value is empty or contains only white-space.</value>
  </data>
  <data name="Global_Validate_TypeMismatch" xml:space="preserve">
    <value>Type '{0}' cannot be validated by the {1} constraint.</value>
  </data>
  <data name="Global_Validate_TypeNotConvertible" xml:space="preserve">
    <value>Cannot  compare data type '{0}' to data type '{1}', and no conversion to a comparable data type exists.</value>
  </data>
  <data name="InvalidDataTypeException_Message" xml:space="preserve">
    <value>The data type is not supported.</value>
  </data>
  <data name="LengthConstraint_LengthNegative" xml:space="preserve">
    <value>Length may not be negative.</value>
  </data>
  <data name="LengthConstraint_Validate_FailedBytes" xml:space="preserve">
    <value>Length must be {0} byte(s). Current length: {1} byte(s).</value>
  </data>
  <data name="LengthConstraint_Validate_FailedString" xml:space="preserve">
    <value>Length must be {0} character(s). Current length: {1} character(s).</value>
  </data>
  <data name="LowerCaseConstraint_Validate_Failed" xml:space="preserve">
    <value>Value contains at least one upper-case character.</value>
  </data>
  <data name="MaximumLengthConstraint_LengthNegative" xml:space="preserve">
    <value>Maximum length may not be negative.</value>
  </data>
  <data name="MaximumLengthConstraint_Validate_FailedBytes" xml:space="preserve">
    <value>Length may not be greater than {0} byte(s). Current length: {1} byte(s).</value>
  </data>
  <data name="MaximumLengthConstraint_Validate_FailedString" xml:space="preserve">
    <value>Length may not be greater than {0} character(s). Current length: {1} character(s).</value>
  </data>
  <data name="MaximumValueConstraint_Validate_Failed" xml:space="preserve">
    <value>Value may not be greater than '{0}'. Actual value: '{1}'.</value>
  </data>
  <data name="MinimumLengthConstraint_LengthNegative" xml:space="preserve">
    <value>Minimum length may not be negative.</value>
  </data>
  <data name="MinimumLengthConstraint_Validate_FailedBytes" xml:space="preserve">
    <value>Length must be at least {0} byte(s). Current length: {1} byte(s).</value>
  </data>
  <data name="MinimumLengthConstraint_Validate_FailedString" xml:space="preserve">
    <value>Length must be at least {0} character(s). Current length: {1} character(s).</value>
  </data>
  <data name="MinimumValueConstraint_Validate_Failed" xml:space="preserve">
    <value>Value may not be less than '{0}'. Actual value: '{1}'.</value>
  </data>
  <data name="ParameterConversionException_Message" xml:space="preserve">
    <value>Parameter conversion failed.</value>
  </data>
  <data name="ParameterConvert_Decrypt_Failed" xml:space="preserve">
    <value>Cannot decrypt parameter data.</value>
  </data>
  <data name="ParameterConvert_Encrypt_Failed" xml:space="preserve">
    <value>Cannot encrypt parameter data.</value>
  </data>
  <data name="ParameterConvert_NetToParameterDataType_NoMatch" xml:space="preserve">
    <value>Data type {0} is not supported by parameter validation.</value>
  </data>
  <data name="ParameterConvert_ParameterToNetDataType_NoMatch" xml:space="preserve">
    <value>Parameter data type {0} cannot be matched to a .NET data type.</value>
  </data>
  <data name="ParameterValidationException_Message" xml:space="preserve">
    <value>Parameter validation failed.</value>
  </data>
  <data name="ParameterValidationResult_Success" xml:space="preserve">
    <value>No validation error.</value>
  </data>
  <data name="PathConstraint_Validate_FailedChars" xml:space="preserve">
    <value>Value contains at least one character not allowed in a file or directory path. Actual value: '{0}'</value>
  </data>
  <data name="RegexConstraint_OptionsInvalid" xml:space="preserve">
    <value>The options are not valid.</value>
  </data>
  <data name="RegexConstraint_PatternInvalid" xml:space="preserve">
    <value>The regular expression pattern is not valid.</value>
  </data>
  <data name="RegexConstraint_Validate_Failed" xml:space="preserve">
    <value>Value does not match regular expression '{0}'.</value>
  </data>
  <data name="UpperCaseConstraint_Validate_Failed" xml:space="preserve">
    <value>Value contains at least one lower-case character.</value>
  </data>
  <data name="ParameterConvert_FromXml_Failed" xml:space="preserve">
    <value>Cannot deserialize XML into an object of type '{0}'.</value>
  </data>
  <data name="ParameterConvert_ToDataType_NoTypeConstraint" xml:space="preserve">
    <value>Cannot find a type constraint to determine the target data type.</value>
  </data>
  <data name="ParameterConvert_ToDataType_ResolveFailed" xml:space="preserve">
    <value>Cannot resolve type '{0}' from type constraint.</value>
  </data>
  <data name="ParameterConvert_ToEnumeration_Failed" xml:space="preserve">
    <value>Cannot convert string '{0}' to enumeration of type '{1}'.</value>
  </data>
  <data name="ParameterConvert_ToEnumeration_NotEnum" xml:space="preserve">
    <value>Type '{0}' is not an enumeration.</value>
  </data>
  <data name="ParameterConvert_ToString_TypeMismatch" xml:space="preserve">
    <value>Object data type '{0}' does not match parameter data type '{1}'.</value>
  </data>
  <data name="ParameterConvert_ToXml_Failed" xml:space="preserve">
    <value>Cannot serialize parameter of type '{0}'.</value>
  </data>
  <data name="ParameterConvert_To_DataTypeNotSupported" xml:space="preserve">
    <value>Data type '{0}' is not supported.</value>
  </data>
  <data name="ParameterConvert_To_Failed" xml:space="preserve">
    <value>Cannot convert string '{0}' to data type '{1}'.</value>
  </data>
  <data name="ConstraintParserException_Message" xml:space="preserve">
    <value>Cannot parse constraint string.</value>
  </data>
  <data name="ConstraintParser_Parse_EmptyConstraint" xml:space="preserve">
    <value>Constraint string contains an empty constraint.</value>
  </data>
  <data name="ConstraintParser_Parse_ParametersInvalid" xml:space="preserve">
    <value>At least one argument of constraint [{0}] is invalid.</value>
  </data>
  <data name="ConstraintParser_SplitConstraints_InvalidContent" xml:space="preserve">
    <value>Invalid data outside of constraints at position {0}.</value>
  </data>
  <data name="ConstraintParser_SplitConstraints_InvalidLBracket" xml:space="preserve">
    <value>Invalid '[' at position {0}.</value>
  </data>
  <data name="ConstraintParser_SplitConstraints_InvalidRBracket" xml:space="preserve">
    <value>Invalid ']' at position {0}.</value>
  </data>
  <data name="ConstraintParser_SplitConstraint_NoName" xml:space="preserve">
    <value>Constraint has no name, only parameters '{0}'.</value>
  </data>
  <data name="EndpointConstraint_Validate_Failed" xml:space="preserve">
    <value>'{0}' is not a valid IP endpoint, host name is invalid.</value>
  </data>
  <data name="EndpointConstraint_Validate_FailedPort" xml:space="preserve">
    <value>'{0}' is not a valid IP endpoint, port number is invalid.</value>
  </data>
  <data name="HostnameConstraint_Validate_Failed" xml:space="preserve">
    <value>'{0}' is not a valid host name or IP address.</value>
  </data>
  <data name="ConstraintParser_HandleUnknownConstraint_NotDefined" xml:space="preserve">
    <value>Constraint '{0}' is not defined for data type '{1}'.</value>
  </data>
  <data name="ConstraintParser_HandleUnknownConstraint_UnknownName" xml:space="preserve">
    <value>Unknown constraint name '{0}'.</value>
  </data>
  <data name="ConstraintParser_SplitConstraint_MissingRBracket" xml:space="preserve">
    <value>Missing ')' at end of constraint '{0}'.</value>
  </data>
  <data name="ParameterValidator_Validate_ValueNull" xml:space="preserve">
    <value>Value may not be null.</value>
  </data>
</root>